sudo: required
language: ruby
rvm:
  - 2.3

services:
  - docker

git:
  depth: false

env:
  secure: "rtgKP04pgFqE+b1iWNv5MaZjxVZpMB7ekyTtKRaS/5PVCSKgd+yySHn6q4kWq0Y+0oTDURYqd3mSpMIXeeDAOe8ggCUuAuU7j8NGQyFlZzKqdwp7sjD+o9WGIVtJNnWyVxbMICl66qIrYQVN7DsfwEwA3y3QgqQa3+uYyQrq9O1RVyEIGO6xVfHtfcmgggPh3r3TNBfcWMu8tXaQO7WBS46+xbUFU51p/neJ84IsjFgb8lDqW5M/5JlhsTSIDpjH8PiUhXT+9k4ri3uwd0enVEHhR/7j4THp+OI2oVQVvDKjkc1iAS4Qq1aHx9y10cnBCEucwotzxyemKbU2zZTfDkJh2DgPvBRJ+chGnmkPO80v+mVqHBdx11+d4PlNhxdEJ/hYNeZMxjO0eZpfHV4Z5KG1a5Rs+1dHLQq946RFfjf0pRICmQpYjwFn6W9ka5peZNuuuG59mnhCsRnEv78RVottmFA27/Uv/ol3yAVMcizH9fn+eewB+7o8UKSfZnQIcAHxHBx2ROjaoIupTBSSliL6FsDd6cZbkXAwsIvwaeuK5Qlf+aAXWQ9dp9hgkbUIBlrb7nSR/n31TEdvolzvsySzjSQOBsgvupA3v4xnZekxCu94CdXDMh9eonubC487pYQuS0Dja4o0qij+wlIbA3ODm/jMzo00o2oD+ge/YEU="

install:
  - sudo /etc/init.d/postgresql stop
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - docker build -t pgsql_yeti -f ./ci/pgsql.Dockerfile .
  - docker network create yeti-net
  - docker run -d --network yeti-net -p 5432:5432 --name db pgsql_yeti
  - cp config/database.example.yml config/database.yml
  - cp config/yeti_web.yml.distr config/yeti_web.yml

stages:
  - test
  - stable package
  - nightly package

jobs:
  include:
    - stage: test
      script:
        - bundle install --jobs=3 --retry=3 --deployment
        - RAILS_ENV=test bundle exec rake db:create db:structure:load db:migrate
        - RAILS_ENV=test bundle exec rake db:second_base:create db:second_base:structure:load db:second_base:migrate
        - RAILS_ENV=test bundle exec rake db:seed
        - bundle exec rspec

    - stage: test
      script:
        - bundle install --jobs=3 --retry=3 --deployment
        - RAILS_ENV=test bundle exec rake db:create db:structure:load db:migrate
        - RAILS_ENV=test bundle exec rake db:second_base:create db:second_base:structure:load db:second_base:migrate
        - RAILS_ENV=test bundle exec rake db:seed
        - bundle exec cucumber

    - stage: test
      script:
        - bundle install --jobs=3 --retry=3 --deployment
        - RAILS_ENV=test bundle exec rake db:create db:structure:load db:migrate
        - RAILS_ENV=test bundle exec rake db:second_base:create db:second_base:structure:load db:second_base:migrate
        - RAILS_ENV=test bundle exec rake db:seed
        - cd pgq-processors && bundle install --gemfile="./Gemfile" && cd ..
        - cd pgq-processors && BUNDLE_GEMFILE=./Gemfile ./bin/bundle exec rspec && cd ..

    - stage: stable package
      if: branch != master OR tag =~ ^.*$
      script: &build_jessie
        - rm -vf config/database.yml
        - docker build -t yeti-web -f ./ci/build_jessie.Dockerfile .
        - docker run --network yeti-net --name yeti-web yeti-web && docker commit yeti-web yeti-web:built
      deploy:
        skip_cleanup: true
        provider: script
        script: docker run --name yeti-web-deploy yeti-web:built ci/deploy.sh "$API_ENDPOINT" jessie "${TRAVIS_TAG:0:3}" main /build/*.deb
        on:
          tags: true
          condition: "$TRAVIS_TAG == *-master*"

    - stage: stable package
      if: branch != master OR tag =~ ^.*$
      script: &build_stretch
        - rm -vf config/database.yml
        - docker build -t yeti-web -f ./ci/build_stretch.Dockerfile .
        - docker run --network yeti-net --name yeti-web yeti-web && docker commit yeti-web yeti-web:built
      deploy:
        skip_cleanup: true
        provider: script
        script: docker run --name yeti-web-deploy yeti-web:built ci/deploy.sh "$API_ENDPOINT" stretch "${TRAVIS_TAG:0:3}" main /build/*.deb
        on:
          tags: true
          condition: "$TRAVIS_TAG == *-master*"

    - stage: nightly package
      if: branch = master
      script: *build_jessie
      deploy:
        skip_cleanup: true
        provider: script
        script: docker run --name yeti-web-deploy yeti-web:built ci/deploy.sh "$API_ENDPOINT" jessie nightly main /build/*.deb
        on:
          all_branches: true

    - stage: nightly package
      if: branch = master
      script: *build_stretch
      deploy:
        skip_cleanup: true
        provider: script
        script: docker run --name yeti-web-deploy yeti-web:built ci/deploy.sh "$API_ENDPOINT" stretch nightly main /build/*.deb
        on:
          all_branches: true

